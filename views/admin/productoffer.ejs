<%- include("../../views/partials/admin/header") %>

<style>
  .col-md-3 {
    padding: 20px;
    border: 1px solid #ddd;
    border-radius: 10px;
    margin: 10px;
  }

  .error-message {
    color: red;
    margin-top: 5px;
  }

  .form-label {
    margin-bottom: 8px;
    font-weight: bold;
  }

  .form-control {
    width: 100%;
    padding: 8px;
    margin-bottom: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
    box-sizing: border-box;
  }

  .d-grid {
    margin-top: 20px;
  }

  .btn-primary {
    background-color: #007bff;
    color: #fff;
    border: 1px solid #007bff;
    border-radius: 5px;
    padding: 10px 20px;
    cursor: pointer;
  }

  .btn-primary:hover {
    background-color: #0056b3;
    border-color: #0056b3;
  }
</style>

<section class="content-main">
  <div class="content-header">
    <div>
      <h2 class="content-title card-title"> Manage Offers</h2>
    </div>
  </div>

  <div class="card">
    <div class="card-body">
      <div class="row">
        <!-- Offer Form Section -->
        <div class="col-md-3">
          <form  id="offerForm" >
            <div class="mb-4">
              <label for="offer-name" class="form-label">Offer Name</label>
              <input type="text" id="offer-name" name="offerName" placeholder="Enter offer name" class="form-control" />
              <div id="error-offer-name" class="error-message"></div>
            </div>


            <div class="mb-4">
              <label class="form-label">Offer Type</label><br>
              <label>
                <input type="radio" id="productOffer" name="offerType" value="product" onchange="toggleDropdown()" checked>
                Product Offer
              </label>
              <label>
                <input type="radio" id="categoryOffer" name="offerType" value="category" onchange="toggleDropdown()">
                Category Offer
              </label>
            </div>

            <div class="mb-4">
              <label for="select-item" class="form-label">Select Product/Category</label>
              <select id="select-item" name="selectedItem" class="form-control"  >
                
                <optgroup id="product-options" >
                  <%for(let i = 0;i < products.length; i++){%>
                  <option value="<%=products[i]._id%>"><%=products[i].productName%></option>
                  <%}%>
                </optgroup>

                <optgroup id="category-options" style="display: none;">
                  <%for(let i = 0; i< category.length; i++){%>
                  <option value="<%=category[i]._id%>"><%=category[i].name%></option>
                  <%}%>
                </optgroup>
               
              </select>
            </div>

            <div>
              <label for="offer-percentage" class="form-label">Discount Percentage (%)</label>
              <input type="number" id="offer-percentage" name="offerPercentage" placeholder="Enter discount percentage" class="form-control" min="1" max="60" required />
              <div id="error-offer-percentage" class="error-message"></div>
            </div>

            

            <div class="d-grid">
              <button class="btn btn-primary mt-20" type="submit" id="submitButton" >Add Offer</button>
            </div>
            <div id="err-msg" class="error-message"></div>
          </form>
        </div>

        <!-- Offers List Section -->
        <div class="col-md-7 ml-10" style="width: 70%;">
          <div class="table-responsive">
            <table class="table" style="background-color: rgb(48, 48, 48); text-align: center;" >
              <thead>
                <tr>
                  <th>Name</th>
                  <th>Offer Type</th>
                  <th>Applied To</th>
                  <th>Discount (%)</th>
                  <th>Status</th>
                  <th>Delete</th>
                </tr>
              </thead>
              <tbody style="font-size: 1rem;">
                <%for(let i = 0 ; i < merge.length; i++){%>
                <tr>
                  <td class="text-start"><%=merge[i].offerName%></td>

                  <%if(merge[i].productName){%>
                  <td class="text-center">Product Offer</td>
                  <%}%>
                  <%if(merge[i].name){%>
                    <td class="text-center">Category Offer</td>
                    <%}%>
                  <td class="text-center"><%=merge[i].name || merge[i].productName%></td>
                  <td class="text-center"><%=merge[i].offerPercentage%>%</td>
                  <td>
                    <span class="badge rounded-pill btn-success" style="width: 60px;">Active</span>
                  </td>
                  <td>
                    <a href="#" onclick="deleteOffer('<%= merge[i]._id %>')" class="btn btn-danger btn-sm" style="height: 35px;width: 90px;">Delete</a>
                  </td>
                  
                  
                </tr>
                <%}%>
              </tbody>
            </table>
          </div>
        </div>

      </div>
    </div>
  </div>
</section>




<script>
  document.getElementById("offerForm").addEventListener("submit", async function (event){
    event.preventDefault();


    if(!validateForm()) return;


    const offerName = document.getElementById("offer-name").value.trim();
    console.log("aa",offerName)

    const selectedItem = document.getElementById("select-item").value;
    console.log("bb",selectedItem)

    const offerType = document.querySelector('input[name="offerType"]:checked').value;
    console.log("cc",offerType)

    const offerPercentage = document.getElementById("offer-percentage").value;
    console.log("dd",offerPercentage)

    const submitButton = document.getElementById("submitButton");

    submitButton.disabled = true; // Disable button to prevent multiple clicks

    try {
      const response = await fetch("/admin/createOffer", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ offerName, offerType, selectedItem, offerPercentage }),
      });

      const data = await response.json();
      if (data.status) {
        Swal.fire({
          icon: "success",
          title: "Added",
          text: "Offer added successfully!",
          confirmButtonText: "OK",
        }).then(() => location.reload());
      } else {
        Swal.fire("Failed", data.message || "Adding offer failed", "error");
      }
    } catch (error) {
      Swal.fire("Error", "An error occurred while adding the offer", "error");
      console.error("Error adding offer:", error);
    } finally {
      submitButton.disabled = false;
    }
  });

  function validateForm() {
    document.querySelectorAll(".error-message").forEach(el => (el.innerHTML = ""));

    let nameField = document.getElementById("offer-name").value;
    let name = nameField;
    if (name === "") {
      document.getElementById("error-offer-name").innerHTML = "Offer Name cannot be empty.";
      return false;
    }

    const nameRegex = /^[A-Za-z0-9 ]+$/; 
    if (!nameRegex.test(name)) {
      document.getElementById("error-offer-name").innerHTML = "Invalid Offer Name ";
      return false;
    }

   

    return true;
  }




  function toggleDropdown() {
    const productOfferChecked  = document.getElementById("productOffer").checked;
    const categoryOfferChecked  = document.getElementById("categoryOffer").checked;
    const productOptions = document.getElementById("product-options");
  const categoryOptions = document.getElementById("category-options");
  const selectItem = document.getElementById("select-item").value;

  if (productOfferChecked) {
    productOptions.style.display = "block";
    categoryOptions.style.display = "none";

    let firstProduct = productOptions.querySelector("option").value;
    if (firstProduct) {
      selectItem = firstProduct;
    }
  } else if (categoryOfferChecked) {
    productOptions.style.display = "none";
    categoryOptions.style.display = "block";
  
    let firstCategory = categoryOptions.querySelector("option").value;
    if (firstCategory) {
      selectItem = firstCategory;
    }
  }
}
</script>

<script>
  async function deleteOffer(offerId) {
    
  try {
    const response = await fetch(`/admin/deleteOffer/${offerId}`, {
      method: "PATCH",
      headers: { "Content-Type": "application/json" },
    });

    const data = await response.json();
    if (data.success) {
      Swal.fire("Deleted", "Offer has been Deleted!", "success").then(() => location.reload());
    } else {
      Swal.fire("Error", data.message, "error");
    }
  } catch (error) {
    Swal.fire("Error", "Something went wrong!", "error");
  }
}

</script>


<%- include("../../views/partials/admin/footer") %>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>