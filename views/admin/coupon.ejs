<%- include("../../views/partials/admin/header") %>
<style>
 .col-md-3 {
   padding: 20px;
   border: 1px solid #ddd;
   border-radius: 10px;
   margin: 10px;
 }


 .error-message {
   color: red;
   margin-top: 5px;
 }


 .form-label {
   margin-bottom: 8px;
 }


 .form-control {
   width: 100%;
   padding: 8px;
   margin-bottom: 10px;
   border: 1px solid #ccc;
   border-radius: 5px;
   box-sizing: border-box;
 }


 .d-grid {
   margin-top: 20px;
 }


 .btn-primary {
   background-color: #007bff;
   color: #fff;
   border: 1px solid #007bff;
   border-radius: 5px;
   padding: 10px 20px;
   cursor: pointer;
 }


 .btn-primary:hover {
   background-color: #0056b3;
   border-color: #0056b3;
 }
 </style>
<section class="content-main">
 <div class="content-header">
   <div>
     <h2 class="content-title card-title">Coupons</h2>
   </div>
 </div>
 <div class="card">
   <div class="card-body">
     <div class="row">
       <div class="col-md-3">
         <form id="couponForm">
             <div class="mb-4">
               <label for="coupon-name" class="form-label">Coupon Name</label>
               <input
                 type="text"
                 id="coupon-name"
                 name="couponName"
                 placeholder="Type here"
                 class="form-control"
               />
               <div id="error-coupon-name" class="error-message"></div>
             </div>


             <div>
               <label for="startingDate" class="form-label">Start Date</label>
               <input
                 type="date"
                 name="startDate"
                 class="form-control"
                 required="true"
                 id="startingDate"
               />
               <div id="error-start-date" class="error-message"></div>
             </div>


             <div>
               <label for="expiringDate" class="form-label">End Date</label>
               <input
                 type="date"
                 name="endDate"
                 class="form-control"
                 id="expiringDate"
                 required="true"
               />
               <div id="error-end-date" class="error-message"></div>
             </div>


             <div>
               <label for="offer-price" class="form-label">Offer Price</label>
               <input
                 type="number"
                 name="offerPrice"
                 placeholder="Type here"
                 class="form-control"
               />
               <div id="error-offer-price" class="error-message"></div>
             </div>


             <div>
               <label for="minimum-price" class="form-label"
                 >Minimum Price</label
               >
               <input
                 type="number"
                 name="minimumPrice"
                 placeholder="Type here"
                 class="form-control"
               />
               <div id="error-minimum-price" class="error-message"></div>
             </div>


             <div class="d-grid">
               <button
                 class="btn btn-primary mt-20"
                 type="submit"
               >
                 Add Coupon
               </button>
             </div>
             
             <div id="err-msg" class="error-message"></div>
           </body>
         </form>
       </div>
       <div class="col-md-7 ml-10" style="width: 70%;">
         <div class="table-responsive">
             <table class="table " style="background-color: rgb(48, 48, 48); text-align: center;">
                 <thead>
                     <tr>
                         <th >Name</th>
                         <th>Created On</th>
                         <th>Expire On</th>
                         <th>Offer Price</th>
                         <th>Minimum Price</th>
                         <th>Status</th>
                         <th>Edit</th>
                         <th>Delete</th>
                     </tr>
                 </thead>
                 <tbody>
                    <%for(let i =0 ; i < coupons.length; i++){%>
                    
                     <tr>
                         <td class="text-start"><%=coupons[i].name%></td>
                         <td class="text-center"><%= new Date(coupons[i].createdOn).toLocaleDateString('en-US')%></td>
                         <td class="text-center"><%=new Date(coupons[i].expireOn).toLocaleDateString('en-US')%></td>
                         <td class="text-center">₹<%=coupons[i].offerPrice%></td>
                         <td class="text-center">₹<%=coupons[i].minimumPrice%></td>
                         <%if(coupons[i].isActive){%>
                            <td>
                            <span class="badge rounded-pill btn-success" style="width: 60px;">Listed</span>
                        </td>
                            <%}else{%>
                                <td> 
                            <span class="badge rounded-pill btn-danger" style="width: 60px">Unlisted</span>
                        </td>
                            <%}%>
                         
                         <td class="text-center">
                             <a href="/admin/editCoupon?id=<%=coupons[i]._id%>" class="btn btn-primary " style="height: 35px;width: 70px; padding: 10px 0px ;">Edit</a>
                            </td>
                            <td>
                            <a href="#" onclick="deleteCoupon('<%=coupons[i]._id%>')" class="btn btn-danger btn-sm" style="height: 35px;width: 90px;">Delete</a>
                        </td>
                     </tr>
                     <%}%>
                 </tbody>
             </table>
         </div>
     </div>
     </div>
   </div>
 </div>
</section>


<script>
    // Set default start date as today (optional)
    function setDefaultStartDate(){
      const today = new Date();
      const year = today.getFullYear();
      const month = (today.getMonth() + 1).toString().padStart(2, "0");
      const day = today.getDate().toString().padStart(2, "0");
      document.getElementById("startingDate").value = `${year}-${month}-${day}`;
    }

    // Coupon Form Submission with Validation
    document.getElementById("couponForm").addEventListener("submit", async function (event) {
      event.preventDefault();
      if (!validateCouponForm()) 
      return;
      
      const formData = {
        couponName: document.getElementById("coupon-name").value.trim(),
        startDate: document.getElementById("startingDate").value,
        endDate: document.getElementById("expiringDate").value,
        offerPrice: document.getElementsByName("offerPrice")[0].value,
        minimumPrice: document.getElementsByName("minimumPrice")[0].value
      };

      try {
        const response = await fetch("/admin/createCoupon", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(formData)
        });

        const data = await response.json();

        if (data.success) {
          Swal.fire({
            icon:"success",
            title: "Success!",
            text: data.message
          }).then(() => {
            window.location.href = "/admin/coupon";
          });
        } else {
          Swal.fire({
            icon: "error",
            title: "Error!",
            text: data.message
          });
        }
      } catch (error) {
        console.error("Error:", error);
        Swal.fire({
          icon:"error",
          title:"Error",
          text: error.message
        });
      }
    });

    // Validate Coupon Form Inputs
    function validateCouponForm() {
      clearCouponErrorMessages();
      let isValid = true;
      
      const couponName = document.getElementById("coupon-name").value.trim();
      const startDate = document.getElementById("startingDate").value;
      const endDate = document.getElementById("expiringDate").value;
      const offerPrice = document.getElementsByName("offerPrice")[0].value;
      const minimumPrice = document.getElementsByName("minimumPrice")[0].value;
      
      if (couponName === "") {
        displayCouponErrorMessage("error-coupon-name", "Please enter a coupon name");
        isValid = false;
      }
      
      if (!startDate) {
        displayCouponErrorMessage("error-start-date", "Please select a start date");
        isValid = false;
      }
      
      if (!endDate) {
        displayCouponErrorMessage("error-end-date", "Please select an end date");
        isValid = false;
      }
      
      if (startDate && endDate) {
        const start = new Date(startDate);
        const end = new Date(endDate);
        const today = new Date();
        if (end < start) {
          displayCouponErrorMessage("error-end-date", "End date must be after start date");
          isValid = false;
        }
        if (end < today) {
        displayCouponErrorMessage("error-end-date", "End date must be in the future");
        isValid = false;
    }
      }
      
      if (!offerPrice || isNaN(offerPrice) || Number(offerPrice) <= 0) {
        displayCouponErrorMessage("error-offer-price", "Please enter a valid offer price greater than 0");
        isValid = false;
      }
      
      if (!minimumPrice || isNaN(minimumPrice) || Number(minimumPrice) <= 0) {
        displayCouponErrorMessage("error-minimum-price", "Please enter a valid minimum price greater than 0");
        isValid = false;
      }
      if(Number(offerPrice) > Number(minimumPrice)){
        displayCouponErrorMessage("error-minimum-price", "Minimum price should be greater than offer price");
        isValid = false;
      }
      
      return isValid;
    }

    // Display error message for coupon form
    function displayCouponErrorMessage(elementId, message) {
      const errorElement = document.getElementById(elementId);
      errorElement.innerText = message;
      errorElement.style.display = "block";
    }

    // Clear all coupon error messages
    function clearCouponErrorMessages() {
      const errorElements = document.getElementsByClassName("error-message");
      Array.from(errorElements).forEach(element => {
        element.innerText = "";
        element.style.display = "none";
      });
    }

    // Delete coupon function (for completeness)
    function deleteCoupon(couponId) {
      fetch(`/admin/deletecoupon?id=${couponId}`, { method: "DELETE" })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            Swal.fire({
              icon: 'success',
              title: "Deleted",
              text: data.message
            }).then(() => location.reload());
          } else {
            Swal.fire({
              icon: 'error',
              title: "Error!",
              text: "Failed to delete the coupon. Please try again"
            });
          }
        })
        .catch(error => {
          console.error("Error deleting coupon:", error);
          Swal.fire({
            icon: 'error',
            title: "Error!",
            text: error.message || "An error occurred"
          });
        });
    }
  </script>


</script>
<%- include("../../views/partials/admin/footer") %>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>