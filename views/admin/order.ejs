<%- include("../../views/partials/admin/header") %>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/notiflix@3.2.4/dist/notiflix-3.2.4.min.css" />
<script src="https://cdn.jsdelivr.net/npm/notiflix@3.2.4/dist/notiflix-3.2.4.min.js"></script>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>


<link rel="stylesheet" href="/admin-assets/css/orderManagement.css">
  <div class="row" >
    <div class="col-12 " >
      <div class="alert alert-info d-flex align-items-center" role="alert" id="returnRequestNotification" style="display: none;" >
        <i class="bi bi-bell-fill me-2"></i>
        <div style="margin-left: 59rem;">
          Return Requests! <button class="btn btn-sm btn-link" onclick="viewReturnRequestDetails()">View Details</button>
        </div>
      </div>
    </div>
  </div>

<div class="container-fluid" style="width: 80%; margin-left: auto;">
  <div class="row">
    <div class="col-12">
      <div class="card shadow-lg border-0 mt-4">
        <div class="card-body">
          <h4 class="card-title text-center">Order Management</h4>
          <div class="table-responsive">
            <table class="table " style="background-color: rgb(48, 48, 48);">
              <thead>
                <tr>
                  <th>Order ID</th>
                  <th>Order Date</th>
                  <th>Status</th>
                  <th>Total Price</th>
                  <th>Actions</th>
                </tr>
              </thead>
              <tbody id="orderList">
                <% orders.forEach(order => { %>
                <tr style="background-color: rgb(48, 48, 48);">
                  <td><%= order._id %></td>
                  <td><%= new Date(order.createdAt).toLocaleDateString() %></td>
                  <td id="order_<%= order._id %>" class="status-cell">
                    <p><%= order.status %></p>
                    <form id="statusForm_<%= order._id %>" onsubmit="submitStatusChange(event)">
                      <select name="status" <%= order.status === 'Cancelled' ? 'disabled' : order.status === 'Returned' ? 'disabled' : order.status === 'Delivered' ? 'disabled' : order.status==='Return Request' ? 'disabled' : '' %>>
                        <option value="Pending" <%= order.status  === 'Pending' ? 'selected' : '' %>>Pending</option>
                        <!-- <option value="Processing" <%= order.status === 'Processing' ? 'selected' : '' %>>Processing</option> -->
                        <!-- <option value="Shipped" <%= order.status === 'Shipped' ? 'selected' : '' %>>Shipped</option> -->
                        <option value="Delivered" <%= order.status === 'Delivered' ? 'selected' : '' %>>Delivered</option>

                      </select>
<%if(order.status==='Cancelled'||order.status==='Returned'||order.status==='Delivered'||order.status==='Return Request'){%>
                      <button type="submit" data-order-id="<%= order._id %>" disabled>Change Status</button>
                      <%}else{%>
                        <button type="submit" data-order-id="<%= order._id %>" >Change Status</button>
<%}%>
                    </form>
                  </td>
                  <td>₹<%= order.totalPrice.toFixed(2) %></td>
                  <td>

                    <button class="btn btn-primary btn-sm" onclick="viewOrderDetails('<%= order._id %>')">Details</button>
                  </td>
                </tr>
                <% }); %>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
<div class="modal fade" id="returnRequestModal" tabindex="-1" aria-labelledby="returnRequestLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="returnRequestLabel">Return Request Details</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <h6><strong>Return Request Information</strong></h6>
        <ul class="list-unstyled">
          <li><strong>Order ID:</strong> <span id="returnOrderId"></span></li>
          <li><strong>Product Name:</strong> <span id="returnProductName"></span></li>
          <li><strong>Reason for Return:</strong> <span id="returnReason"></span></li>
          <li><strong>Refund Amount:</strong> ₹<span id="refundAmount"></span></li>
        </ul>
        <h6><strong>Actions</strong></h6>
        <button class="btn btn-success" onclick="approveReturn()">Approve Return</button>
        <button class="btn btn-danger" onclick="rejectReturn()">Reject Return</button>
        <div id="stockManagement" class="mt-3" style="display: none;">
          <h6><strong>Stock Management</strong></h6>
          <button class="btn btn-primary" onclick="adjustStock()">Adjust Stock</button>
        </div>
      </div>
    </div>
  </div>
</div>

<!--------------------------------ORDER DETAILS MODAL-------------------------------------------->
<div class="modal fade" id="orderDetailsModal" tabindex="-1" aria-labelledby="orderDetailsLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="orderDetailsLabel">Order Details</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>

      <div class="modal-body">
        <h6><strong>Order Information</strong></h6>
        <ul class="list-unstyled mb-3">
          <li><strong>Order ID:</strong> <span id="orderId"></span></li>
          <li><strong>Status:</strong> <span id="orderStatus"></span></li>
          <li><strong>Payment Method:</strong> <span id="paymentMethod"></span></li>
          <li><strong>Total Price:</strong> <span id="totalPrice"></span></li>
          <li><strong>Created At:</strong> <span id="createdAt"></span></li>
        </ul>

      
        <h6><strong>Products in Order</strong></h6>
          <div class="table-responsive">
            <table class="table table-bordered">
              <thead class="table-dark">
                <tr >
                  <th>Product Image</th>
                  <th>Product Name</th>
                  <th>Size</th>
                  <th>Quantity</th>
                  <th>Price</th>
                </tr>
              </thead>
              <tbody id="orderProducts" >
           
              </tbody>
            </table>
          </div>
      </div>
    </div>
  </div>
</div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script>

    ///////////////////////ORDER SEARCH//////////////////////////

    function searchOrders() {
      const searchInput = document.getElementById('searchInput').value;
      window.location.href =` /admin/orders?search=${searchInput}`;
    }


    ///////////////////ORDER DETAILS VIEW///////////////

    function viewOrderDetails(id) {
  fetch(`/admin/orders/${id}`)
    .then(response => response.json())
    .then(order => {

      console.log(order)
    
      document.getElementById('orderId').innerText = `${order.order.orderId}`;
      document.getElementById('orderStatus').innerText =` ${order.order.status}`;
      document.getElementById('paymentMethod').innerText = `${order.order.paymentType}`;
      document.getElementById('totalPrice').innerText = ` ₹${order.order.totalPrice}`;
      document.getElementById('createdAt').innerText = `${new Date(order.order.createdAt).toLocaleDateString()}`;

      const orderProductsTable = document.getElementById("orderProducts");
      orderProductsTable.innerHTML = "";  

      order.order.orderedItems.forEach(item => {
          let row = `<tr  style="background-color: rgb(48, 48, 48); color: white;">
            <td style="width: 7rem;"><img src="/uploads/product-images/${item.products.productImage[0]}"></td>
                      <td>${item.products.productName}</td>
                      <td>${item.size}</td>
                      <td>${item.quantity}</td>
                      <td>₹${item.price}</td>
                    </tr>`;
          orderProductsTable.innerHTML += row;
        });


      const orderDetailsModal = new bootstrap.Modal(document.getElementById('orderDetailsModal'));
      orderDetailsModal.show();
    })
    .catch(error => {
      console.error('Error fetching order details:', error);
      alert('Failed to fetch order details.');
    });
}





/////////////////////ORDER STATUS CHANGE/////////////////////////
const changeOrderStatus = async (orderId, newStatus) => {
  try {
  
    Swal.fire({
      title: "Processing...",
      text: "Updating order status",
      icon: "info",
      allowOutsideClick: false,
      showConfirmButton: false
    });
    
    const response = await fetch('/admin/orders/change-status', {
      method: 'PATCH',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ orderId, newStatus }),
    });


    Swal.close();

    if (!response.ok) {
      const errorData = await response.json().catch(() => ({}));
      throw new Error(errorData.message || 'Failed to update order status');
    }

    await Swal.fire({
  title: "Success!",
  text: "Order status has been updated successfully",
  icon: "success",
  confirmButtonText: "OK"
})
 .then((result) => {
  if (result.isConfirmed) {
    location.reload(); 
  }
});
    const statusCell = document.querySelector(`#order_${orderId}`);
    if (statusCell) {

      const selectElement = statusCell.querySelector('select');
      if (selectElement) {
        selectElement.value = newStatus;
      }
    }

  } catch (error) {
    console.error('Error:', error.message);
    
  
    await Swal.fire({
      title: "Error!",
      text: error.message || "Something went wrong while updating the order status",
      icon: "error",
      confirmButtonText: "OK"
    });
  }
};




///////////STATUS CHANGE SUBMIT//////////////////
const submitStatusChange = async (event) => {
  event.preventDefault();
  const form = event.target;
  const orderId = form.querySelector('button').getAttribute('data-order-id');
  const status = form.querySelector('select[name="status"]').value;
  await changeOrderStatus(orderId, status);
};

document.addEventListener('DOMContentLoaded', () => {
  const statusForms = document.querySelectorAll('[id^="statusForm_"]');
  statusForms.forEach(form => {
    form.addEventListener('submit', submitStatusChange);
  });
});
  </script>
<script>
//  function showReturnRequestNotification() { 
//   document.getElementById('returnRequestNotification').style.display = 'flex';
// }

function viewReturnRequestDetails() {
   
  fetch('/admin/orders/return-requests/details')  // 
    .then(response => response.json())
    .then(data => {
      if (data && data.length > 0) {
        const modalBody = document.querySelector('.modal-body');
        modalBody.innerHTML = ''; 
        
        data.forEach(returnRequest => {
          const requestDiv = document.createElement('div');
          requestDiv.classList.add('request-item');
          
          requestDiv.innerHTML = `
  <h6><strong>Return Request Information</strong></h6>
  <ul class="list-unstyled">
    <li><strong>Order ID:</strong><span id="returnOrderId">${returnRequest.orderId}</span></li>
    <li><strong>Product Name:</strong>  <ul>
        ${returnRequest.products.map(products => `<li>${products.productName}</li>`).join('')}
      </ul>
     
    </li>
    <li><strong>Reason for Return:</strong> ${returnRequest.returnReason}</li>
    <li><strong>Refund Amount:</strong><span id="refundAmount"> ₹${returnRequest.refundAmount}</span></li>
  </ul>
  <h6><strong>Actions</strong></h6>
  <button class="btn btn-success"  onclick="approveReturn('${returnRequest.orderId}')">Approve Return</button>
  <button class="btn btn-danger" onclick="rejectReturn('${returnRequest.orderId}')">Reject Return</button>
`;
          
          modalBody.appendChild(requestDiv);
        });

        const modal = new bootstrap.Modal(document.getElementById('returnRequestModal'));
        modal.show();
      } else {
        console.log("No return requests found.");
      }
    })
    .catch(error => {
      console.error('Error fetching return request details:', error);
    });
}
// showReturnRequestNotification();
function approveReturn() {
  const orderId = document.getElementById('returnOrderId').textContent;
  const refundText = document.getElementById('refundAmount').textContent;
const refundAmount = parseFloat(refundText.replace('₹', '').trim());

  fetch(`/admin/orders/return-requests/approve/${orderId}`, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({ refundAmount }),
  })
    .then(response => response.json())
    .then(data => {
      if (data.success) {

        Notiflix.Notify.success("Request Approved Successfully!", {
          timeout: 3000,             
    position: 'right-top',       
    clickToClose: true,           
    cssAnimationStyle: 'zoom',   
    fontSize: '16px',            
    borderRadius: '10px',        
    showOnlyTheLastOne: true,
        })

        setTimeout(() => {
    window.location.href = "/admin/orders";
  }, 500);
        document.getElementById('stockManagement').style.display = 'block'; 
      } else {
        alert('Error approving return');
      }
    });
}

function rejectReturn() {
  const orderId = document.getElementById('returnOrderId').textContent;

  fetch(`/admin/orders/return-requests/reject/${orderId}`, {
    method: 'POST',
  })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        alert('Return Rejected');
      } else {
        alert('Error rejecting return');
      }
    });
}

</script>
