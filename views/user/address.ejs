<%-include("../../views/partials/user/userprofile")%>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
<style>
  .modal-overlay {
    display: none;
    position: fixed;
    padding: 20px;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
    z-index: 1000;
    backdrop-filter: blur(4px);
  }

  .modal-overlay.active {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .address-modal {
    max-height: 90vh;
    overflow-y: auto;
    padding: 1.5rem;
    background: white;
    border-radius: 12px;
    padding: 2rem;
    width: 90%;
    max-width: 600px;
    position: relative;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
    transform: translateY(-20px);
    opacity: 0;
    transition: all 0.3s ease-out;
  }

  .modal-overlay.active .address-modal {
    transform: translateY(0);
    opacity: 1;
  }

  .modal-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1.5rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid #eee;
  }

  .modal-close {
    background: none;
    border: none;
    font-size: 1.5rem;
    cursor: pointer;
    color: #666;
    transition: color 0.2s;
  }

  .modal-close:hover {
    color: #333;
  }
</style>
<style>
  .tab__body {
    width: 100%;
    padding: 1rem;
  }

  .address-container {
    max-width: 1200px;
    margin: 0 auto;
  }

  .button-container {
    display: flex;
    justify-content: flex-end;
    margin-bottom: 1.5rem;
  }

  .add-btnn {
    background-color: darkslategray;
    color: white;
    padding: 0.625rem 1.25rem;
    border-radius: 0.25rem;
    border: none;
    cursor: pointer;
  }

  .address-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 1.5rem;
  }

  .address-card {
    border: 1px solid #ddd;
    border-radius: 0.5rem;
    padding: 1rem;
    background-color: white;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  .card-header h3 {
    font-size: 1.125rem;
    margin: 0;
  }

  .card-actions {
    display: flex;
    gap: 0.5rem;
  }

  @media (max-width: 768px) {
    .address-grid {
      grid-template-columns: 1fr;
    }

    .card-header {
      flex-direction: column;
      gap: 1rem;
      text-align: center;
    }

    .button-container {
      justify-content: center;
    }
  }

  @media (max-width: 480px) {
    .tab__body {
      padding: 0.5rem;
    }

    .address-card {
      padding: 0.75rem;
    }

    .card-actions button {
      width: 2rem;
      height: 2rem;
    }
  }

  .container {
    padding: 1rem;
  }


  .card-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1rem;
  }

  .card-actions button {
    background: none;
    border: none;
    cursor: pointer;
    font-size: 1.2rem;
    margin-left: 0.5rem;
  }

  .card-actions button:hover {
    color: #007bff;
  }

  .address-details {
    font-size: 0.9rem;
    color: #333;
    line-height: 1.4;
  }

  .edit-btn i,
  .delete-btn i {
    color: #555;
  }

  .edit-btn:hover i {
    color: #28a745;
  }

  .delete-btn:hover i {
    color: #dc3545;
  }
</style>
<main class="main">
  <!--=============== BREADCRUMB ===============-->
  <section class="breadcrumb">
    <ul class="breadcrumb__list flex container">
      <li><a href="/home" class="breadcrumb__link">Home</a></li>
      <li><span class="breadcrumb__link">></span></li>
      <li><a href="/profile" class="breadcrumb__link">Profile</a></li>
      <li><span class="breadcrumb__link">></span></li>
      <li><a href="/profile/address" class="breadcrumb__link">Address</a></li>
    </ul>
  </section>

  <!--=============== ACCOUNTS ===============-->
  <section class="accounts section--lg">
    <div class="accounts__container container grid">
      <div class="account__tabs">

        <a href="/profile">
          <p class="account__tab ">
            <i class="fi fi-rs-user"></i> Update Profile
          </p>
        </a>
        <a href="/profile/wallet">
          <p class="account__tab ">
            <i class="fi fi-rs-settings-sliders"></i> Wallet
          </p>
        </a>
        <a href="/profile/orders">
          <p class="account__tab" >
            <i class="fi fi-rs-shopping-bag"></i> Orders
          </p>

        </a>
        <a href="/profile/change-password">
          <p class="account__tab ">
            <i class="fi fi-rs-settings-sliders"></i> Change Password
          </p>
        </a>
        <a href="/profile/address">
          <p class="account__tab active-tab">
            <i class="fi fi-rs-marker"></i> My Address
          </p>
        </a>

      </div>
      <div class="tab__body">
        <div class="address-container">
        <!---------------------ADD ADDRESSS BUTTTONNNN----------------------->>
          <div class="button-container">
            <button class="add-btnn">Add New Address</button>
          </div>
          <div class="container mt-4">
            <div class="address-grid">
              <% if (userAddress && userAddress.address && userAddress.address.length > 0) { %>
              <% userAddress.address.forEach(address => { %>
              <div class="address-card">
                <div class="card-header">
                  <h3>Shipping Address</h3>
                  <div class="card-actions">
                    <button class="edit-btnn" id="edit-btnn" title="Edit Address" onclick='openEditModal("<%=address._id%>", "<%=address.name%>", "<%=address.city%>", "<%=address.state%>", "<%=address.pincode%>", "<%=address.landmark%>", "<%=address.phonenumber%>", "<%=address.addressType%>")'>
                      <i class="fa-solid fa-pen-to-square"></i>
                    </button>
                    <button class="delete-btn" title="Delete Address" id="delete-button" onclick="deleteAddress('<%= address._id %>')">
                      <i class="fa-solid fa-trash"></i>
                    </button>
                  </div>
                </div>
                <address class="address-details">
                  <strong><%= address.name %></strong><br />
                  <%= address.city %>, <%= address.landmark %><br />
                  <%= address.pincode %>, <%= address.state %><br />
                  Phone: <%= address.phonenumber %>
                </address>

              </div>
              <% }) %>
              <% } else { %>
              <p>No addresses available. Please add one.</p>
              <% } %>
            </div>
            <nav aria-label="Address pagination">
              <ul class="pagination justify-content-center">
                <% if (currentPage > 1) { %>

                <li class="page-item">
                  <a class="page-link" href="?page=<%= currentPage - 1 %>">&laquo; Previous</a>
                </li>

                <% } %>
                <% for (let i = 1; i <= totalPages; i++) { %>
                <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                  <a class="page-link" href="?page=<%= i %>"><%= i %></a>
                </li>
                <% } %>
                <% if (currentPage < totalPages) { %>
                <li class="page-item">
                  <a class="page-link" href="?page=<%= currentPage + 1 %>">Next &raquo;</a>
                </li>
                <% } %>
              </ul>
            </nav>
          </div>

        <!--------------------ADD ADDRESS MODALLL--------------------------------->


          <div class="modal-overlay" id="addressModal">
            <div class="address-modal">
              <div class="modal-header">
                <h2>Add New Address</h2>
                <button class="modal-close">&times;</button>
              </div>
              <div class="address-form-container">
                <form method="post" id="addaddressform">
                  <div class="mb-3">
                    <label for="fullname" class="form-label">Full Name</label>
                    <input type="text" class="form-control" id="addname" name="name" placeholder="Enter your full name" />
                    <span class="error-message" id="addnameError"></span>
                  </div>

                  <div class="mb-3">
                    <label for="city" class="form-label">City</label>
                    <input type="text" class="form-control" id="city" name="city" placeholder="Enter your city" />
                    <span class="error-message" id="cityError"></span>
                  </div>

                  <div style="display: flex; gap: 1rem; align-items: flex-start;">
                    <span class="mb-3" style="flex: 1;">
                      <label for="state" class="form-label" style="display: flex;">State</label>
                      <select id="state" name="state" class="form-select">
                        <option value="{{state}}" elected>state</option>
                        <option value="Andhra Pradesh">Andhra Pradesh</option>
                        <option value="Arunachal Pradesh">Arunachal Pradesh</option>
                        <option value="Assam">Assam</option>
                        <option value="Bihar">Bihar</option>
                        <option value="Chhattisgarh">Chhattisgarh</option>
                        <option value="Goa">Goa</option>
                        <option value="Gujarat">Gujarat</option>
                        <option value="Haryana">Haryana</option>
                        <option value="Himachal Pradesh">Himachal Pradesh</option>
                        <option value="Jharkhand">Jharkhand</option>
                        <option value="Karnataka">Karnataka</option>
                        <option value="Kerala">Kerala</option>
                        <option value="Madhya Pradesh">Madhya Pradesh</option>
                        <option value="Maharashtra">Maharashtra</option>
                        <option value="Manipur">Manipur</option>
                        <option value="Meghalaya">Meghalaya</option>
                        <option value="Mizoram">Mizoram</option>
                        <option value="Nagaland">Nagaland</option>
                        <option value="Odisha">Odisha</option>
                        <option value="Punjab">Punjab</option>
                        <option value="Rajasthan">Rajasthan</option>
                        <option value="Sikkim">Sikkim</option>
                        <option value="Tamil Nadu">Tamil Nadu</option>
                        <option value="Telangana">Telangana</option>
                        <option value="Tripura">Tripura</option>
                        <option value="Uttar Pradesh">Uttar Pradesh</option>
                        <option value="Uttarakhand">Uttarakhand</option>
                        <option value="West Bengal">West Bengal</option>
                        <option value="Chandigarh">Chandigarh</option>
                        <option value="Delhi">Delhi</option>
                        <option value="Jammu and Kashmir">Jammu and Kashmir</option>
                        <option value="Ladakh">Ladakh</option>
                      </select>
                      <span class="error-message" id="stateError"></span>
                    </span>
                    <span class="mb-3" style="flex: 1;">
                      <label for="postalcode" class="form-label" style="display: flex;">Postal Code</label>
                      <input type="text" class="form-control" id="pincode" name="pincode" placeholder="Enter your postal code" />
                      <span class="error-message" id="pincodeError"></span>
                    </span>
                  </div>
                  <div class="mb-3">
                    <label for="landmark" class="form-label">Landmark</label>
                    <input type="text" class="form-control" id="landmark" name="landmark" placeholder="Enter a landmark " />
                    <span class="error-message" id="landmarkError"></span>
                  </div>
                  <div class="mb-3">
                    <label for="phonenumber" class="form-label">Phone Number</label>
                    <input type="text" class="form-control" id="addphone" name="phonenumber" placeholder="Enter your phone number" />
                    <span class="error-message" id="addphoneError"></span>
                  </div>
                  <div style="display: flex; gap: 1rem; align-items: flex-start;">
                    <span class="mb-3" style="flex: 1;">
                      <label for="addressType" class="form-label" style="display: flex;">Address Type</label>
                      <select name="addressType" id="addressType" class="form-select">
                        <option value="--none--" selected>--none--</option>
                        <option value="Home Address">Home Address</option>
                        <option value="Office Address">Office Address</option>
                      </select>
                      <span class="error-message" id="addressTypeError"></span>
                    </span>
                  </div>
                  <button type="submit" class="btn btn-dark " style="width: 50%; margin-left: 25%;" >Submit</button>
                </form>
              </div>
            </div>
          </div>
 <!--------------------EDIT ADDRESS MODALLL--------------------------------->>
          <div class="modal-overlay" id="editAddressModal">
            <div class="address-modal">
              <div class="modal-header">
                <h2>Edit Address</h2>
                <button class="modal-close" id="closeEditModal">&times;</button>
              </div>
              <div class="address-form-container">
                <form method="post" id="editAddressForm">
                  <div class="mb-3">
                    <label for="fullname" class="form-label">Full Name</label>
                    <input type="text" class="form-control" id="editName" name="name" placeholder="Enter your full name" />
                    <span class="error-message" id="editNameError"></span>
                  </div>

                  <div class="mb-3">
                    <label for="city" class="form-label">City</label>
                    <input type="text" class="form-control" id="editCity" name="city" placeholder="Enter your city" />
                    <span class="error-message" id="editCityError"></span>
                  </div>

                  <div style="display: flex; gap: 1rem; align-items: flex-start;">
                    <span class="mb-3" style="flex: 1;">
                      <label for="state" class="form-label" style="display: flex;">State</label>
                      <select id="editState" name="state" class="form-select">
                        <option value="{{state}}" elected>state</option>
                        <option value="Andhra Pradesh">Andhra Pradesh</option>
                        <option value="Arunachal Pradesh">Arunachal Pradesh</option>
                        <option value="Assam">Assam</option>
                        <option value="Bihar">Bihar</option>
                        <option value="Chhattisgarh">Chhattisgarh</option>
                        <option value="Goa">Goa</option>
                        <option value="Gujarat">Gujarat</option>
                        <option value="Haryana">Haryana</option>
                        <option value="Himachal Pradesh">Himachal Pradesh</option>
                        <option value="Jharkhand">Jharkhand</option>
                        <option value="Karnataka">Karnataka</option>
                        <option value="Kerala">Kerala</option>
                        <option value="Madhya Pradesh">Madhya Pradesh</option>
                        <option value="Maharashtra">Maharashtra</option>
                        <option value="Manipur">Manipur</option>
                        <option value="Meghalaya">Meghalaya</option>
                        <option value="Mizoram">Mizoram</option>
                        <option value="Nagaland">Nagaland</option>
                        <option value="Odisha">Odisha</option>
                        <option value="Punjab">Punjab</option>
                        <option value="Rajasthan">Rajasthan</option>
                        <option value="Sikkim">Sikkim</option>
                        <option value="Tamil Nadu">Tamil Nadu</option>
                        <option value="Telangana">Telangana</option>
                        <option value="Tripura">Tripura</option>
                        <option value="Uttar Pradesh">Uttar Pradesh</option>
                        <option value="Uttarakhand">Uttarakhand</option>
                        <option value="West Bengal">West Bengal</option>
                        <option value="Chandigarh">Chandigarh</option>
                        <option value="Delhi">Delhi</option>
                        <option value="Jammu and Kashmir">Jammu and Kashmir</option>
                        <option value="Ladakh">Ladakh</option>
                      </select>
                      <span class="error-message" id="editStateError"></span>
                    </span>
                    <span class="mb-3" style="flex: 1;">
                      <label for="postalcode" class="form-label" style="display: flex;">Postal Code</label>
                      <input type="text" class="form-control" id="editPincode" name="pincode" placeholder="Enter your postal code" />
                      <span class="error-message" id="editPincodeError"></span>
                    </span>
                  </div>
                  <div class="mb-3">
                    <label for="landmark" class="form-label">Landmark</label>
                    <input type="text" class="form-control" id="editLandmark" name="landmark" placeholder="Enter a landmark " />
                    <span class="error-message" id="editLandmarkError"></span>
                  </div>
                  <div class="mb-3">
                    <label for="phonenumber" class="form-label">Phone Number</label>
                    <input type="text" class="form-control" id="editPhone" name="phonenumber" placeholder="Enter your phone number" />
                    <span class="error-message" id="editPhoneNumberError"></span>
                  </div>
                  <div style="display: flex; gap: 1rem; align-items: flex-start;">
                    <span class="mb-3" style="flex: 1;">
                      <label for="addressType" class="form-label" style="display: flex;">Address Type</label>
                      <select name="addressType" id="editAddressType" class="form-select">
                        <option value="{{--none--}}" selected>--none--</option>
                        <option value="Home Address">Home Address</option>
                        <option value="Office Address">Office Address</option>
                      </select>
                      <span class="error-message" id="editAddressTypeError"></span>
                    </span>
                  </div>
                  <input type="hidden" id="editAddressId" name="addressId" value="">
                  <button type="submit" class="btn btn-dark " style="width: 50%; margin-left: 25%;">Submit</button>
                </form>
              </div>
            </div>
          </div>
  </section>
</main>
<%-include("../../views/partials/user/footer")%>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>

<script>

//////////FOR OPENNG ADD ADDRESS MODAL
  document.addEventListener('DOMContentLoaded', function() {
    const addButton = document.querySelector('.add-btnn');
    const modal = document.getElementById('addressModal');
    const closeButton = modal.querySelector('.modal-close');
    const form = document.getElementById('addaddressform');

    function resetForm() {
      form.reset(); 

    
      const errorElements = document.querySelectorAll('.error-message');
      errorElements.forEach(error => {
        error.textContent = '';
      });
    }
    addButton.addEventListener('click', function() {
      modal.classList.add('active');
      document.body.style.overflow = 'hidden';
    });

    function closeModal() {
      modal.classList.remove('active');
      document.body.style.overflow = '';
      resetForm();
    }

    closeButton.addEventListener('click', closeModal);

    modal.addEventListener('click', function(e) {
      if (e.target === modal) {
        closeModal();
      }
    });

   
    document.addEventListener('keydown', function(e) {
      if (e.key === 'Escape' && modal.classList.contains('active')) {
        closeModal();
      }
    });
  });





  ////////////ADD ADDRESS MODAL VALIDATION////////////////////
  document.getElementById("addaddressform").addEventListener("submit", async function(e) {
    e.preventDefault();

    const addname = document.getElementById("addname").value.trim();
    const city = document.getElementById("city").value.trim();
    const state = document.getElementById("state").value
    const pincode = document.getElementById("pincode").value.trim();
    const landmark = document.getElementById("landmark").value.trim();
    const addphone = document.getElementById("addphone").value.trim();
    const addressType = document.getElementById("addressType").value


    const addnameError = document.getElementById("addnameError");
    const cityError = document.getElementById("cityError");
    const stateError = document.getElementById("stateError");
    const pincodeError = document.getElementById("pincodeError");
    const landmarkError = document.getElementById("landmarkError");
    const addphoneError = document.getElementById("addphoneError");
    const addressTypeError = document.getElementById("addressTypeError")

    addnameError.textContent = "";
    cityError.textContent = "";
    stateError.textContent = "";
    pincodeError.textContent = "";
    landmarkError.textContent = "";
    addphoneError.textContent = "";
    addressTypeError.textContent = "";


    let isValid = true;

    if (addname === "") {
      addnameError.textContent = "Field is Required"
      addnameError.style.color = "red";
      isValid = false
    }
    const cityRegex = /^[A-Za-z\s]+$/;
    if (city === "") {
      cityError.textContent = "Field is Required"
      cityError.style.color = "red";
      isValid = false
    }
    if (!cityRegex.test(city)) {
      cityError.textContent = "Enter valid city name"
      cityError.style.color = "red";
      isValid = false
    }

    if (state === "state") {
      stateError.textContent = "Select any state"
      stateError.style.color = "red";
      isValid = false
    }
    const pincodeRegex = /^\d{6}$/
    if (!pincodeRegex.test(pincode)) {
      pincodeError.textContent = "Enter Valid Pincode"
      pincodeError.style.color = "red";
      isValid = false
    }
    if (landmark === "") {
      landmarkError.textContent = "Field is Required"
      landmarkError.style.color = "red";
      isValid = false
    }

    const phoneRegex = /^\d{10}$/;
    if (!phoneRegex.test(addphone)) {
      addphoneError.textContent = "Please Enter a valid Phone Number";
      addphoneError.style.color = "red";
      isValid = false;
    }

    if (addressType === "--none--") {
      addressTypeError.textContent = "Select any Address Type"
      addressTypeError.style.color = "red";
      isValid = false
    }
    if (isValid) {
      try {
        const response = await fetch("/profile/add-address", {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            name: addname,
            city,
            state,
            pincode,
            landmark,
            phonenumber: addphone,
            addressType,

          })
        })
        const result = await response.json()
        if (result.success) {
          swal({
            title: "Success!",
            text: result.message,
            icon: "success",
            background: '#fff', 
                    color: '#000', 
                    confirmButtonColor: 'black', 
                    confirmButtonText: 'OK',
          }).then(() => {
            window.location.href = '/profile/address'
          })
        } else {
          swal({
            title: "Error",
            text: result.message,
            icon: "error",
            button: "Try again"
          })
        }
      } catch (error) {
        console.log("Error", error)
        swal({
          title: "Error",
          text: "An unexpected error occured",
          icon: "error",
          button: "ok"
        })
      }
    }
  })
  const inputs = ['addname', 'city', 'state', 'pincode', 'landmark', 'addphone', 'addressType'];

  inputs.forEach(inputId => {
    document.getElementById(inputId).addEventListener('input', function() {
      const error = document.getElementById(inputId + 'Error');
      error.textContent = '';
    });
  });



  document.addEventListener('DOMContentLoaded', function() {
    const addButton = document.querySelector('.edit-btnn');
    const modal = document.getElementById('editAddressModal');
    const closeButton = modal.querySelector('.modal-close');
    const form = document.getElementById('editAddressForm');

   
    function resetForm() {
      form.reset(); 

      const errorElements = document.querySelectorAll('.error-message');
      errorElements.forEach(error => {
        error.textContent = '';
      });
    }
    addButton.addEventListener('click', function() {
      modal.classList.add('active');
      document.body.style.overflow = 'hidden';
    });

    function closeModal() {
      modal.classList.remove('active');
      document.body.style.overflow = '';
      resetForm();
    }

    closeButton.addEventListener('click', closeModal);

    modal.addEventListener('click', function(e) {
      if (e.target === modal) {
        closeModal();
      }
    });

    document.addEventListener('keydown', function(e) {
      if (e.key === 'Escape' && modal.classList.contains('active')) {
        closeModal();
      }
    });

  })


  //FOR EDITT


  function openEditModal(id, name, city, state, pincode, landmark, phone, addressType) {
    document.getElementById('editAddressId').value = id; 
    document.getElementById('editName').value = name;
    document.getElementById('editCity').value = city;
    document.getElementById('editState').value = state;
    document.getElementById('editPincode').value = pincode;
    document.getElementById('editLandmark').value = landmark;
    document.getElementById('editPhone').value = phone;
    document.getElementById('editAddressType').value = addressType;


    document.getElementById('editAddressModal').classList.add('active');
  }

  document.getElementById('closeEditModal').onclick = function() {
    document.getElementById('editAddressModal').classList.remove('active');
  };


//////////////EDIT ADDRESS VALIDATIONS/////////////

  document.getElementById("editAddressForm").addEventListener("submit", async function(e) {
    e.preventDefault();

    
    const editName = document.getElementById("editName").value.trim();
    const editCity = document.getElementById("editCity").value.trim();
    const editState = document.getElementById("editState").value;
    const editPincode = document.getElementById("editPincode").value.trim();
    const editLandmark = document.getElementById("editLandmark").value.trim();
    const editPhone = document.getElementById("editPhone").value.trim();
    const editAddressType = document.getElementById("editAddressType").value;
    const addressId = document.getElementById("editAddressId").value;

    const editNameError = document.getElementById("editNameError");
    const editCityError = document.getElementById("editCityError");
    const editStateError = document.getElementById("editStateError");
    const editPincodeError = document.getElementById("editPincodeError");
    const editLandmarkError = document.getElementById("editLandmarkError");
    const editPhoneError = document.getElementById("editPhoneNumberError");
    const editAddressTypeError = document.getElementById("editAddressTypeError");

    editNameError.textContent = "";
    editCityError.textContent = "";
    editStateError.textContent = "";
    editPincodeError.textContent = "";
    editLandmarkError.textContent = "";
    editPhoneError.textContent = "";
    editAddressTypeError.textContent = "";

    let isValid = true;

    if (editName === "") {
      editNameError.textContent = "Field is Required";
      editNameError.style.color = "red";
      isValid = false;
    }

    const cityRegex = /^[A-Za-z\s]+$/;
    if (editCity === "") {
      editCityError.textContent = "Field is Required";
      editCityError.style.color = "red";
      isValid = false;
    }
    if (!cityRegex.test(editCity)) {
      editCityError.textContent = "Enter valid city name";
      editCityError.style.color = "red";
      isValid = false;
    }

    if (editState === "state") {
      editStateError.textContent = "Select any state";
      editStateError.style.color = "red";
      isValid = false;
    }

    const pincodeRegex = /^\d{6}$/;
    if (!pincodeRegex.test(editPincode)) {
      editPincodeError.textContent = "Enter Valid Pincode";
      editPincodeError.style.color = "red";
      isValid = false;
    }

    if (editLandmark === "") {
      editLandmarkError.textContent = "Field is Required";
      editLandmarkError.style.color = "red";
      isValid = false;
    }

    const phoneRegex = /^\d{10}$/;
    if (!phoneRegex.test(editPhone)) {
      editPhoneError.textContent = "Please Enter a valid Phone Number";
      editPhoneError.style.color = "red";
      isValid = false;
    }

    if (editAddressType === "--none--") {
      editAddressTypeError.textContent = "Select any Address Type";
      editAddressTypeError.style.color = "red";
      isValid = false;
    }

    if (isValid) {
      try {
        const response = await fetch("/profile/edit-address", {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            addressId,
            name: editName,
            city: editCity,
            state: editState,
            pincode: editPincode,
            landmark: editLandmark,
            phonenumber: editPhone,
            addressType: editAddressType
          })
        });

        const result = await response.json();
        if (result.success) {
          swal({
            title: "Success!",
            text: result.message,
            icon: "success",
            background: '#fff', 
                    color: '#000', 
                    confirmButtonColor: 'black', 
                    confirmButtonText: 'OK',
          }).then(() => {
            window.location.href = '/profile/address';
          });
        } else {
          swal({
            title: "Error",
            text: result.message,
            icon: "error",
            button: "Try again"
          });
        }
      } catch (error) {
        console.log("Error", error);
        swal({
          title: "Error",
          text: "An unexpected error occurred",
          icon: "error",
          button: "ok"
        });
      }
    }
  });



  /////////CLEAR THE EXISTIGN ERROR MESSAGE////////////
  const editInputs = ['editName', 'editCity', 'editState', 'editPincode', 'editLandmark', 'editPhone', 'editAddressType'];

  editInputs.forEach(inputId => {
    document.getElementById(inputId).addEventListener('input', function() {
      const error = document.getElementById(inputId + 'Error');
      error.textContent = '';
    });
  });
</script>
<script src="/js/addressActions.js"></script>