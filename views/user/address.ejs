<%-include("../../views/partials/user/header")%>
<%-include("../../views/partials/user/userprofile")%>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
<style>
.modal-overlay {
    display: none;
    position: fixed;
    padding: 20px;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
    z-index: 1000;
    backdrop-filter: blur(4px);
}

.modal-overlay.active {
    display: flex;
    justify-content: center;
    align-items: center;
}

.address-modal {
    max-height: 90vh;
    overflow-y: auto;
    padding: 1.5rem;
    background: white;
    border-radius: 12px;
    padding: 2rem;
    width: 90%;
    max-width: 600px;
    position: relative;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
    transform: translateY(-20px);
    opacity: 0;
    transition: all 0.3s ease-out;
}

.modal-overlay.active .address-modal {
    transform: translateY(0);
    opacity: 1;
}

.modal-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1.5rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid #eee;
}

.modal-close {
    background: none;
    border: none;
    font-size: 1.5rem;
    cursor: pointer;
    color: #666;
    transition: color 0.2s;
}

.modal-close:hover {
    color: #333;
}
.add-btnn{
    position: relative;  
    background-color: blue; 
    border-radius: 3px; 
    color: white; 
    /* padding: 10px; */
}
.edit-btn, .delete-btn { 
    display: inline-block; 
    background-color: orange; 
    border-radius: 3px; 
    color: white; 
    padding: 7px; 
    margin-right: 15px;
     }
</style>
<style>
    .tab__body {
      width: 100%;
      padding: 1rem;
    }
    
    .address-container {
      max-width: 1200px;
      margin: 0 auto;
    }
    
    .button-container {
      display: flex;
      justify-content: flex-end;
      margin-bottom: 1.5rem;
    }
    
    .add-btnn {
      background-color: blue;
      color: white;
      padding: 0.625rem 1.25rem;
      border-radius: 0.25rem;
      border: none;
      cursor: pointer;
      transition: background-color 0.3s;
    }
    
    .add-btnn:hover {
      background-color: darkblue;
    }
    
    .address-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
      gap: 1.5rem;
    }
    
    .address-card {
      border: 1px solid #ddd;
      border-radius: 0.5rem;
      padding: 1rem;
      background-color: white;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
    
    .card-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding-bottom: 0.75rem;
      border-bottom: 1px solid #eee;
      margin-bottom: 1rem;
    }
    
    .card-header h3 {
      font-size: 1.125rem;
      margin: 0;
    }
    
    .card-actions {
      display: flex;
      gap: 0.5rem;
    }
    
    .card-actions button {
      width: 2.5rem;
      height: 2.5rem;
      border: none;
      border-radius: 0.25rem;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      transition: opacity 0.3s;
    }
    
    .card-actions button:hover {
      opacity: 0.8;
    }
    
    .edit-btn {
      background-color: orange;
      color: white;
    }
    
    .delete-btn {
      background-color: red;
      color: white;
    }
    
    .address-details {
      font-style: normal;
      line-height: 1.5;
    }
    
    /* Responsive Adjustments */
    @media (max-width: 768px) {
      .address-grid {
        grid-template-columns: 1fr;
      }
      
      .card-header {
        flex-direction: column;
        gap: 1rem;
        text-align: center;
      }
      
      .button-container {
        justify-content: center;
      }
    }
    
    @media (max-width: 480px) {
      .tab__body {
        padding: 0.5rem;
      }
      
      .address-card {
        padding: 0.75rem;
      }
      
      .card-actions button {
        width: 2rem;
        height: 2rem;
      }
    }
    </style>
    <style>
      .container {
  padding: 1rem;
}

.address-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 1rem;
}

.address-card {
  border: 1px solid #ddd;
  border-radius: 8px;
  padding: 1rem;
  background-color: #f9f9f9;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  transition: transform 0.2s, box-shadow 0.2s;
}

.address-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
}

.card-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1rem;
}

.card-actions button {
  background: none;
  border: none;
  cursor: pointer;
  font-size: 1.2rem;
  margin-left: 0.5rem;
}

.card-actions button:hover {
  color: #007bff;
}

.address-details {
  font-size: 0.9rem;
  color: #333;
  line-height: 1.4;
}

.edit-btn i,
.delete-btn i {
  color: #555;
}

.edit-btn:hover i {
  color: #28a745;
}

.delete-btn:hover i {
  color: #dc3545;
}

    </style>
<main class="main">
    <!--=============== BREADCRUMB ===============-->
    <section class="breadcrumb">
      <ul class="breadcrumb__list flex container">
        <li><a href="/home" class="breadcrumb__link">Home</a></li>
        <li><span class="breadcrumb__link">></span></li>
        <li><a href="/profile" class="breadcrumb__link">Profile</a></li>
      </ul>
    </section>

    <!--=============== ACCOUNTS ===============-->
    <section class="accounts section--lg">
      <div class="accounts__container container grid">
        <div class="account__tabs">
       
          <a href="/profile">
          <p class="account__tab " >
            <i class="fi fi-rs-user"></i> Update Profile
          </p>
      </a>
      <a href="/profile/wallet">
          <p class="account__tab ">
            <i class="fi fi-rs-settings-sliders"></i> Wallet
          </p>
      </a>
      <a href="/profile/orders">
          <p class="account__tab" data-target="#orders">
            <i class="fi fi-rs-shopping-bag"></i> Orders
          </p>

      </a>
      <a href="/profile/change-password">
          <p class="account__tab " >
            <i class="fi fi-rs-settings-sliders"></i> Change Password
          </p>
      </a>
         <a href="/profile/address">
          <p class="account__tab active-tab" >
            <i class="fi fi-rs-marker"></i> My Address
          </p>
      </a>
         
          <p class="account__tab"><i class="fi fi-rs-exit"></i> Logout</p>
        </div>
         

            
        <div class="tab__body">
            <div class="address-container">
              <!-- Add Address Button -->
              <div class="button-container">
                <button class="add-btnn" >Add New Address</button>
              </div>



          <div class="container mt-4">
            <div class="address-grid">
              <% if (userAddress && userAddress.address && userAddress.address.length > 0) { %>
                <% userAddress.address.forEach(address => { %>
                  <div class="address-card">
                    <div class="card-header">
                      <h3>Shipping Address</h3>
                      <div class="card-actions">
                        <button class="edit-btn" id="edit-btn" title="Edit Address">
                          <i class="fa-solid fa-pen-to-square"></i>
                        </button>
                        <button class="delete-btn" title="Delete Address" onclick="deleteAddress('<%= address._id %>')">
                          <i class="fa-solid fa-trash"></i>
                        </button>
                      </div>
                    </div>
                    <address class="address-details">
                      <strong><%= address.name %></strong><br />
                      <%= address.city %>, <%= address.landmark %><br />
                      <%= address.pincode %>, <%= address.state %><br />
                      Phone: <%= address.phonenumber %>
                    </address>
                  </div>
                <% }) %>
              <% } else { %>
                <p>No addresses available. Please add one.</p>
              <% } %>
            </div>
            <nav aria-label="Address pagination">
              <ul class="pagination justify-content-center">
                <% if (currentPage > 1) { %>
                  <li class="page-item">
                    <a class="page-link" href="?page=<%= currentPage - 1 %>">&laquo; Previous</a>
                  </li>
                <% } %>
                <% for (let i = 1; i <= totalPages; i++) { %>
                  <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                    <a class="page-link" href="?page=<%= i %>"><%= i %></a>
                  </li>
                <% } %>
                <% if (currentPage < totalPages) { %>
                  <li class="page-item">
                    <a class="page-link" href="?page=<%= currentPage + 1 %>">Next &raquo;</a>
                  </li>
                <% } %>
              </ul>
            </nav>
            
          </div>
          



          <div class="modal-overlay" id="addressModal">
            <div class="address-modal">
                <div class="modal-header">
                    <h2>Add New Address</h2>
                    <button class="modal-close">&times;</button>
                </div>
                <div class="address-form-container">
                    <form method="post" id="addaddressform">
                        <div class="mb-3">
                            <label for="fullname" class="form-label">Full Name</label>
                            <input
                                type="text"
                                class="form-control"
                                id="addname"
                                name="name"
                                placeholder="Enter your full name"
                            />
                            <span class="error-message" id="addnameError"></span>
                        </div>
                       
                        <div class="mb-3">
                            <label for="city" class="form-label">City</label>
                            <input type="text" class="form-control" id="city" name="city" placeholder="Enter your city"  />
                            <span class="error-message" id="cityError"></span>
                        </div>
                       
                        <div style="display: flex; gap: 1rem; align-items: flex-start;">
                            <span class="mb-3" style="flex: 1;">
                                <label for="state" class="form-label" style="display: flex;">State</label>
                                <select id="state" name="state" class="form-select">
                                    <option value="{{state}}" elected>state</option>
                                    <option value="Andhra Pradesh">Andhra Pradesh</option>
                                    <option value="Arunachal Pradesh">Arunachal Pradesh</option>
                                    <option value="Assam">Assam</option>
                                    <option value="Bihar">Bihar</option>
                                    <option value="Chhattisgarh">Chhattisgarh</option>
                                    <option value="Goa">Goa</option>
                                    <option value="Gujarat">Gujarat</option>
                                    <option value="Haryana">Haryana</option>
                                    <option value="Himachal Pradesh">Himachal Pradesh</option>
                                    <option value="Jharkhand">Jharkhand</option>
                                    <option value="Karnataka">Karnataka</option>
                                    <option value="Kerala">Kerala</option>
                                    <option value="Madhya Pradesh">Madhya Pradesh</option>
                                    <option value="Maharashtra">Maharashtra</option>
                                    <option value="Manipur">Manipur</option>
                                    <option value="Meghalaya">Meghalaya</option>
                                    <option value="Mizoram">Mizoram</option>
                                    <option value="Nagaland">Nagaland</option>
                                    <option value="Odisha">Odisha</option>
                                    <option value="Punjab">Punjab</option>
                                    <option value="Rajasthan">Rajasthan</option>
                                    <option value="Sikkim">Sikkim</option>
                                    <option value="Tamil Nadu">Tamil Nadu</option>
                                    <option value="Telangana">Telangana</option>
                                    <option value="Tripura">Tripura</option>
                                    <option value="Uttar Pradesh">Uttar Pradesh</option>
                                    <option value="Uttarakhand">Uttarakhand</option>
                                    <option value="West Bengal">West Bengal</option>
                                    <option value="Chandigarh">Chandigarh</option>
                                    <option value="Delhi">Delhi</option>
                                    <option value="Jammu and Kashmir">Jammu and Kashmir</option>
                                    <option value="Ladakh">Ladakh</option>
                                </select>
                                <span class="error-message" id="stateError"></span>
                            </span>
                            
                            <span class="mb-3" style="flex: 1;">
                                <label for="postalcode" class="form-label" style="display: flex;">Postal Code</label>
                                <input
                                    type="text"
                                    class="form-control"
                                    id="pincode"
                                    name="pincode"
                                    placeholder="Enter your postal code"
                                />
                                <span class="error-message" id="pincodeError"></span>
                            </span>
                        </div>
                       
                        <div class="mb-3">
                            <label for="landmark" class="form-label">Landmark</label>
                            <input type="text" class="form-control" id="landmark" name="landmark" placeholder="Enter a landmark " />
                            <span class="error-message" id="landmarkError"></span>
                        </div>
                       
                        <div class="mb-3">
                            <label for="phonenumber" class="form-label">Phone Number</label>
                            <input
                                type="text"
                                class="form-control"
                                id="addphone"
                                name="phonenumber"
                                placeholder="Enter your phone number"
                            />
                            <span class="error-message" id="addphoneError"></span>
                        </div>
                       
                        <div style="display: flex; gap: 1rem; align-items: flex-start;">
                            <span class="mb-3" style="flex: 1;">
                                <label for="addressType" class="form-label" style="display: flex;">Address Type</label>
                                <select name="addressType" id="addressType" class="form-select">
                                    <option value="--none--" selected>--none--</option>
                                    <option value="Home Address">Home Address</option>
                                    <option value="Office Address">Office Address</option>
                                </select>
                                <span class="error-message" id="addressTypeError"></span>
                            </span>
                        </div>
                       
                        <button type="submit" class="btn btn-primary">Submit</button>
                    </form>
                </div>
            </div>
        </div>
       


        <div class="modal-overlay" id="editAddressModal" style="display: none;">
          <div class="address-modal">
              <div class="modal-header">
                  <h2>Edit Address</h2>
                  <button class="modal-close" onclick="closeEditModal()">&times;</button>
              </div>
              <div class="address-form-container">
                  <form method="post" id="editAddressForm">
                      <input type="hidden" id="editAddressId" name="addressId" />
                      <div class="mb-3">
                          <label for="editFullName" class="form-label">Full Name</label>
                          <input type="text" class="form-control" id="editFullName" name="name" />
                      </div>
                      <div class="mb-3">
                          <label for="editCity" class="form-label">City</label>
                          <input type="text" class="form-control" id="editCity" name="city" />
                      </div>
                      <div class="mb-3">
                          <label for="editState" class="form-label">State</label>
                          <select id="editState" name="state" class="form-select">
                              <option value="Andhra Pradesh">Andhra Pradesh</option>
                              <option value="Arunachal Pradesh">Arunachal Pradesh</option>
                              <!-- Add all other states here -->
                          </select>
                      </div>
                      <div class="mb-3">
                          <label for="editPincode" class="form-label">Pincode</label>
                          <input type="text" class="form-control" id="editPincode" name="pincode" />
                      </div>
                      <div class="mb-3">
                          <label for="editLandmark" class="form-label">Landmark</label>
                          <input type="text" class="form-control" id="editLandmark" name="landmark" />
                      </div>
                      <div class="mb-3">
                          <label for="editPhoneNumber" class="form-label">Phone Number</label>
                          <input type="text" class="form-control" id="editPhoneNumber" name="phonenumber" />
                      </div>
                      <div class="mb-3">
                          <label for="editAddressType" class="form-label">Address Type</label>
                          <select id="editAddressType" name="addressType" class="form-select">
                              <option value="Home Address">Home Address</option>
                              <option value="Office Address">Office Address</option>
                          </select>
                      </div>
                      <button type="submit" class="btn btn-primary">Save Changes</button>
                  </form>
              </div>
          </div>
      </div>
      
        </section>
    </main>
    <%-include("../../views/partials/user/footer")%>

    <!--=============== SWIPER JS ===============-->
    <script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>

    <!--=============== MAIN JS ===============-->



<!-- Bootstrap Bundle with Popper -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>

<script>
    document.addEventListener('DOMContentLoaded', function() {
    const addButton = document.querySelector('.add-btnn');
    const modal = document.getElementById('addressModal');
    const closeButton = modal.querySelector('.modal-close');
    const form = document.getElementById('addaddressform');

// Function to reset form and clear error messages
function resetForm() {
    form.reset(); // Reset all form fields
    
    // Clear all error messages
    const errorElements = document.querySelectorAll('.error-message');
    errorElements.forEach(error => {
        error.textContent = '';
    });
}
    addButton.addEventListener('click', function() {
        modal.classList.add('active');
        document.body.style.overflow = 'hidden';
    });

    function closeModal() {
        modal.classList.remove('active');
        document.body.style.overflow = '';
        resetForm(); 
    }

    closeButton.addEventListener('click', closeModal);

    modal.addEventListener('click', function(e) {
        if (e.target === modal) {
            closeModal();
        }
    });

    // Handle ESC key press
    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape' && modal.classList.contains('active')) {
            closeModal();
        }
    });

    // Form submission handling
   
});
document.getElementById("addaddressform").addEventListener("submit", async function(e) {
  e.preventDefault();

const addname = document.getElementById("addname").value.trim();
const city = document.getElementById("city").value.trim();
const state= document.getElementById("state").value
const pincode= document.getElementById("pincode").value.trim();
const landmark = document.getElementById("landmark").value.trim();
const addphone= document.getElementById("addphone").value.trim();
const addressType = document.getElementById("addressType").value


const addnameError = document.getElementById("addnameError");
const cityError = document.getElementById("cityError");
const stateError = document.getElementById("stateError");
const pincodeError = document.getElementById("pincodeError");
const landmarkError = document.getElementById("landmarkError");
const addphoneError = document.getElementById("addphoneError");
const addressTypeError = document.getElementById("addressTypeError")

addnameError.textContent = "";
cityError.textContent = "";
stateError.textContent = "";
pincodeError.textContent = "";
landmarkError.textContent = "";
addphoneError.textContent = "";
addressTypeError.textContent = "";


let isValid = true;

if(addname===""){
  addnameError.textContent = "Field is Required"
  addnameError.style.color = "red";
  isValid = false
}
 const cityRegex = /^[A-Za-z\s]+$/;
if(city===""){
  cityError.textContent = "Field is Required"
  cityError.style.color = "red";
  isValid = false
}
if(!cityRegex.test(city)){
  cityError.textContent = "Enter valid city name"
  cityError.style.color = "red";
  isValid = false
}

if(state==="state"){
  stateError.textContent = "Select any state"
  stateError.style.color = "red";
  isValid = false
}
const pincodeRegex =  /^\d{6}$/
if(!pincodeRegex.test(pincode)){
  pincodeError.textContent = "Enter Valid Pincode"
  pincodeError.style.color = "red";
  isValid = false
}
if(landmark===""){
  landmarkError.textContent = "Field is Required"
  landmarkError.style.color = "red";
  isValid = false
}

const phoneRegex = /^\d{10}$/; // Example: Only allows 10-digit numbers
        if (!phoneRegex.test(addphone)) {
            addphoneError.textContent = "Please Enter a valid Phone Number";
            addphoneError.style.color = "red";
            isValid = false;
        }

if(addressType==="--none--"){
  addressTypeError.textContent = "Select any Address Type"
  addressTypeError.style.color = "red";
  isValid = false
}
        if(isValid){
          try{
            const response = await fetch("/profile/add-address", {
              method:'POST',
              headers:{
                'Content-Type':'application/json'
              },
              body: JSON.stringify({
  name: addname,
  city,
  state,
  pincode,
  landmark,
  phonenumber: addphone,
  addressType,
 
})
            })
            const result = await response.json()
            if(result.success){
              swal({
                title:"Success!",
                text:result.message,
                icon:"success",
                button:"OK"
              }).then(() => {
                window.location.href = '/profile/address'
              })
            }else{
              swal({
                title:"Error",
                text:result.message,
                icon:"error",
                button:"Try again"
              })
            }
          }catch(error){
            console.log("Error", error)
            swal({
              title:"Error",
              text:"An unexpected error occured",
              icon:"error",
              button:"ok"
            })
          }
        }
})
const inputs = ['addname', 'city', 'state', 'pincode', 'landmark', 'addphone', 'addressType'];

inputs.forEach(inputId => {
    document.getElementById(inputId).addEventListener('input', function() {
        const error = document.getElementById(inputId + 'Error');
        error.textContent = ''; 
    });
});




document.addEventListener("DOMContentLoaded", function () {
    const editButtons = document.querySelectorAll(".edit-btn");

    editButtons.forEach((button) => {
        button.addEventListener("click", function () {
            const addressCard = button.closest(".address-card");
            const addressId = addressCard.dataset.id; // Set data-id for each address
            const name = addressCard.querySelector(".address-details strong").innerText;
            const city = addressCard.querySelector(".address-details").children[1].innerText.split(",")[0];
            const landmark = addressCard.querySelector(".address-details").children[1].innerText.split(",")[1];
            const pincode = addressCard.querySelector(".address-details").children[2].innerText.split(",")[0];
            const state = addressCard.querySelector(".address-details").children[2].innerText.split(",")[1];
            const phone = addressCard.querySelector(".address-details").children[3].innerText.split(":")[1].trim();

            // Populate modal fields
            document.getElementById("editAddressId").value = addressId;
            document.getElementById("editFullName").value = name;
            document.getElementById("editCity").value = city;
            document.getElementById("editLandmark").value = landmark;
            document.getElementById("editPincode").value = pincode;
            document.getElementById("editState").value = state;
            document.getElementById("editPhoneNumber").value = phone;

            // Show modal
            document.getElementById("editAddressModal").style.display = "block";
        });
    });
});

function closeEditModal() {
    document.getElementById("editAddressModal").style.display = "none";
}


















//FOR DELETE

function deleteAddress(addressId) {
    Swal.fire({
      title: 'Are you sure?',
      text: "Do you want to delete this address permanently?",
      icon: 'warning',
      showCancelButton: true,
      confirmButtonText: 'Yes, delete it!',
      cancelButtonText: 'No, cancel!',
      reverseButtons: true
    }).then((result) => {
      if (result.isConfirmed) {
        // If the user confirms, delete the address
        deleteAddressFromServer(addressId);
      }
    });
  }

  function deleteAddressFromServer(addressId) {
    // Send an HTTP request to your backend to delete the address
    fetch(`/deleteAddress/${addressId}`, {
      method: 'DELETE',
    })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          Swal.fire('Deleted!', 'Your address has been deleted.', 'success')
            .then(() => {
              // Optionally, refresh the page or remove the address from the DOM
              location.reload();
            });
        } else {
          Swal.fire('Error!', 'Something went wrong. Please try again later.', 'error');
        }
      })
      .catch(error => {
        Swal.fire('Error!', 'An error occurred while deleting the address.', 'error');
      });
  }







</script>
